snippet ans "anonymous namespace"
namespace {
  $0
} // namespace
endsnippet

snippet lli "long long int"
long long int $0
endsnippet

snippet lld "long long double"
long long double $0
endsnippet

# TODO(kbobyrev): For whatever reason the cursor is on $1 here. Probably I have
# missed something in the docs.
snippet fori "for loop: i from 0 to n - 1"
for (${4:int} ${2:i} = 0; $2 < ${1:n}; ${3:++$2}) {
  $0
}
endsnippet

snippet head "Generic Header"
//===--- `!v expand('%:t')` - ${1:Description} ----------------------------*- C++ -*-===//
//
// ${2:Project name}
//
// `!v strftime("%Y")` Kirill Bobyrev
//
// This file is distributed under the Apache 2.0 License. See LICENSE for
// details.
//
//===----------------------------------------------------------------------===//
endsnippet

snippet llvmhead "LLVM Standard Header"
//===--- `!v expand('%:t')` - ${1:Description} ----------------------------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
endsnippet

snippet acm "Competetive programming problem solution template"
//===----------------------------------------------------------------------===//
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <optional>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <string_view>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <variant>
#include <vector>

using namespace std;
//===----------------------------------------------------------------------===//

int main() {
  // {{{ Boilerplate code
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout.precision(10);
  cout << fixed;
  // }}}

  $0

  return 0;
}
endsnippet

# TODO(kbobyrev): Change both instances accordingly.
snippet sortall "all elements of container: from begin() to end()"
std::sort(std::begin(${0:a}), std::end($0));
endsnippet

snippet main "main function definition"
int main(int argc, char *argv[]) {
  ${0}
  return 0;
}
endsnippet

snippet once "pragma #once header guard"
#pragma once
endsnippet

# TODO(kbobyrev): Add class snippet. Take inspiration from
# https://github.com/honza/vim-snippets/blob/master/UltiSnips/cpp.snippets#L37
# TODO(kbobyrev): Add function snippet. Take inspiration from
# https://github.com/honza/vim-snippets/blob/master/UltiSnips/cpp.snippets#L97
